// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ABPersonelTayinAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250527193807_AddSonucToTayinTalebi")]
    partial class AddSonucToTayinTalebi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ABPersonelTayinAPI.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Islem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Loglar");
                });

            modelBuilder.Entity("ABPersonelTayinAPI.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ABPersonelTayinAPI.Entities.TayinTalebi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BasvuruTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IlTercihi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Sonuc")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Değerlendirilmedi");

                    b.Property<string>("TalepTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("personelId");

                    b.ToTable("Talepler");
                });

            modelBuilder.Entity("ABPersonelTayinAPI.Entities.personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gorevyeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SicilNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("SicilNo")
                        .IsUnique();

                    b.ToTable("Kisiler");
                });

            modelBuilder.Entity("ABPersonelTayinAPI.Entities.Log", b =>
                {
                    b.HasOne("ABPersonelTayinAPI.Entities.personel", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ABPersonelTayinAPI.Entities.TayinTalebi", b =>
                {
                    b.HasOne("ABPersonelTayinAPI.Entities.personel", "personel")
                        .WithMany("Talepler")
                        .HasForeignKey("personelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personel");
                });

            modelBuilder.Entity("ABPersonelTayinAPI.Entities.personel", b =>
                {
                    b.HasOne("ABPersonelTayinAPI.Entities.Role", null)
                        .WithMany("Persons")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ABPersonelTayinAPI.Entities.Role", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("ABPersonelTayinAPI.Entities.personel", b =>
                {
                    b.Navigation("Talepler");
                });
#pragma warning restore 612, 618
        }
    }
}
